// (C) 2007, Michael Gruhn.

// NO WARRANTY IS GRANTED.  THIS PLUG-IN  IS PROVIDED FOR FREE  ON  AN  "AS  IS"
// BASIS, WITHOUT WARRANTY OF ANY KIND.  NO LIABILITY IS GRANTED, INCLUDING, BUT
// NOT LIMITED TO, ANY DIRECT OR INDIRECT,  SPECIAL, INCIDENTAL OR CONSEQUENTIAL
// DAMAGE ARISING OUT OF THE USE  OR INABILITY  TO  USE  THIS PLUG-IN,  COMPUTER
// FAILTURE  OF  MALFUNCTION  INCLUDED.  THE  USE  OF THE  SOURCE  CODE,  EITHER
// PARTIALLY OR IN TOTAL, IS ONLY GRANTED,  IF USED IN THE SENSE OF THE AUTHOR'S
// INTENTION,  AND USED WITH ACKNOWLEDGEMENT OF THE AUTHOR.  LAST BUT NOT LEAST,
// BY USING THIS  PLUG-IN YOU RELINQUISH YOUR CLAIM TO SUE IT'S AUTHOR,  AS WELL
// AS YOUR CLAIM TO ENTRUST SOMEBODY ELSE WITH DOING SO.

// NOTE: This is a early alpha release!

desc:Compciter - GUI
desc:Compciter [LOSER]
//tags: processing distortion exciter
//author: LOSER

//////////////////////////////////////////
import ../ui-lib/ui-lib.jsfx-inc
import ../ui-lib/ui-lib-compat.jsfx-inc
filename:0,../ui-lib/bitmap/theme-dark-orange.png
filename:1,../ui-lib/bitmap/theme-light-orange.png
filename:2,../ui-lib/bitmap/theme-sunny.png
filename:3,../ui-lib/bitmap/theme-retro.png
filename:4,../ui-lib/bitmap/theme-blue.png
filename:5,../ui-lib/bitmap/theme-pattern.png
//////////////////////////////////////////

slider1:0<0,60,.1>-Drive (dB)
slider2:0<0,100,1>-Distortion (%)
slider3:5000<20,12000,1>-Highpass (Hz)
slider4:-6<-60,24,1>-Wet (dB)
slider5:0<-120,0,1>-Dry (dB)
slider6:1<0,1,1{Off,On}>-Limiter
slider14:0<0,6,1>-Theme

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
///////////////////////
bufferlength = ceil(srate*1);
buffer0 = 0;
buffer1 = buffer0 + bufferlength;
bufferpeak = buffer1 + bufferlength;
freemem = bufferpeak + bufferlength;
freemem = ui_setup(freemem); // returns the first index it's not using
///////////////////////


gain = seekgain = 1;
c = 8.65617025;
dc = 10^-30;

/////////////////////////////////////////
//           @slider code              //
needs_slider_update=1;
function slider_update()
(
needs_slider_update=0;
threshDB = -slider1;
thresh = exp(threshDB/c);
ratio = 1/20;

release = exp( -60 / (    pow(1-slider2/100,3)   *500*srate/1000) / c );

t0 = t1 = 0;
blp = -exp(-2*$pi*slider3*3 / srate );
alp = 1.0 + blp;

wet = exp(slider4/c) / exp(( threshDB -threshDB*ratio )/c);
dry = exp(slider5/c);

seekgain = 1;

slider14 < 1 ? (
    file=0;
) : slider14 < 2 ? (
    file=1;
) : slider14 < 3 ? (
    file=2;
) : slider14 < 5 ? (
    file=3;
) : slider14 < 6 ? (
    file=4;
) : slider14 < 7 ? (
    file=5;
);

);
//////////////////////////////////////

@slider
// ui:gfx function=custom_gfx_func, height=300

//////////////////////////////////////
@block
needs_slider_update ? slider_update();
//////////////////////////////////////

@sample
s0 =      (t00 = alp*spl0-blp*t00);
s1 =      (t01 = alp*spl1-blp*t01);
s0 =      (t10 = alp*s0  -blp*t10);
s1 =      (t11 = alp*s1  -blp*t11);
s0 = spl0-(t20 = alp*s0-blp*t20);
s1 = spl1-(t21 = alp*s1-blp*t21);

rms = max( abs(spl0) , abs(spl1) );

seekGain = ((rms > thresh) ? exp((threshDB + (log(rms)*c-threshDB)*ratio) /c) / rms : 1);
gain = ((gain > seekGain) ? seekGain : min( gain/release , seekGain ));
spl0 = spl0*dry + s0 *gain * wet;
spl1 = spl1*dry + s1 *gain * wet;

slider6 == 1 ? (
  outl = min(max(spl0,-0.98),0.98);
  outr = min(max(spl1,-0.98),0.98);
  spl0 = outl;
  spl1 = outr;
);

@gfx 100 200
control_start("main", "bitmap-simple", file);

ui_screen() == "main" ? (
title_desc("Compciter", "processing | distortion | exciter");

    ui_split_topratio(3/3);
        ui_split_leftratio(3/5);
            control_group("");
            ui_split_leftratio(1/3);
                ui_automate(slider1, labelled_dial(slider1, 0, 0, 60, 0, "drive", slider1, "%i dB", 50,50,14));
            ui_split_next();
                ui_automate(slider2, labelled_dial(slider2, 0, 0, 100, 0, "distortion", slider2, "%i %%", 50,50,14));
            ui_split_next();
                ui_automate(slider3, labelled_dial(slider3, 5000, 20, 12000, 0, "highpass", slider3, "%i Hz", 50,50,14));
            ui_pop();
    ui_pop();
                control_group("");
                ui_split_leftratio(1/2);
                    ui_split_topratio(7/9);
                        ui_automate(slider4, labelled_dial(slider4, -6, -60, 24, 0, "wet", slider4, "%i dB", 50,50,14));
                ui_pop();
                ui_split_next();
                control_group("");
                ui_split_topratio(7/9);
                    ui_automate(slider5, labelled_dial(slider5, 0, -120, 0, 0, "dry", slider5, "%i dB", 50,50,14));
                ui_split_next();
                    ui_automate(slider6, oneway_switch_sp(slider6, "limit", 15, 11));
                ui_pop();
            ui_pop();
) : ui_screen() == "opts" ? (
  control_navbar("about", -1, -1);

  ui_pad();

  ui_font(#face, 14, 0, 0);
  ui_align(0, -1);
  
  text_height = ui_wraptext("author: LOSER
  
NOTE: This is a early alpha release!

editor: JPH
-GUI (using Geraint Luff's API)
-added limiter (toggle below -dry-)");
ui_align(.5, -1);
ui_split_rightratio(0.2);
    control_group("");
    slider14 = labelled_dial(slider14, 0, 0, 6, 0, "theme", slider14, "%i", 50,50,14);
ui_pop();

) : ui_system();

ui_interacted() ? needs_slider_update = 1;
