// This effect Copyright (C) 2004 and later Cockos Incorporated
// License: LGPL - http://www.gnu.org/licenses/lgpl.html
// desc: Delay w/LFO-Modulated Length
//tags: delay modulation LFO
//author: Cockos

@init

function varlenslider() (
odelay=delaylen;
delaylen=min(slider1 * srate / 1000,500000);
odelay != delaylen ? freembuf(delaylen*2);

wetmix = 2 ^ (slider7/6);
drymix = 2 ^ (slider8/6);
wetmix2 = 2 ^ (slider4/6);
drymix2 = 2 ^ (slider5/6);
dppossc = $pi/(slider10 * srate);
dpbacksc = min(max(slider11,0),1)*delaylen*0.5 - 1;
);

function varlensample() (
dppos = dppos+dppossc;
dpback = (sin(dppos)+1)*dpbacksc;
dpint = delaypos-dpback-1;
dpint < 0 ? dpint += delaylen;
dpint *= 2;

os1=dpint[0];
os2=dpint[1];

dpint = delaypos*2;

dpint[0]=min(max(spl0*drymix + os1*wetmix,-4),4);
dpint[1]=min(max(spl1*drymix + os2*wetmix,-4),4);

(delaypos+=1) >= delaylen ? delaypos=0;

spl0=spl0*drymix2 + os1*wetmix2;
spl1=spl1*drymix2 + os2*wetmix2;
);

function varlengfx() (
        ui_split_leftratio(1/7);
            ui_automate(slider1, labelled_dial(slider1, 300, 0, 4000, 0, "ms", slider1, slider1 == 0 ? ("0 ms") : ("%.i ms"), 50,50,12));
        ui_split_next();

            ui_automate(slider64, fixed_delaydial(slider64, 8, 17, 1, -2, "sync", slider64,
                                            slider64 == 17 ? ("1/64 tr") :
                                            slider64 == 16 ? ("1/64") :
                                            slider64 == 15 ? ("1/32 tr") :
                                            slider64 == 14 ? ("1/32") :
                                            slider64 == 13 ? ("1/16 tr") :
                                            slider64 == 12 ? ("1/16") :
                                            slider64 == 11 ? ("1/8 tr") :
                                            slider64 == 10 ? ("1/8") :
                                            slider64 == 9 ? ("1/4 tr") :
                                            slider64 == 8 ? ("1/4") :
                                            slider64 == 7 ? ("1/2 tr") : 
                                            slider64 == 6 ? ("1/2") :
                                            slider64 == 5 ? ("1/1 tr") :
                                            slider64 == 4 ? ("1/1") :
                                            slider64 == 3 ? ("2/1 tr") :
                                            slider64 == 2 ? ("2/1") :
                                            slider64 == 1 ? ("4/1"), 50,50,12));
        ui_split_next();
        control_group_nopad("");
            ui_split_topratio(1/2);
                ui_automate(slider10, labelled_dial(slider10, 1, 0.001, 30, 0, "period", slider10, "%.2f sec", 50,50,12));
            ui_split_next();
                ui_automate(slider11, labelled_dial(slider11, 0.3, 0.001, 1, 0, "amp", slider11, "%.2f", 50,50,12));
            ui_pop();
        ui_pop();
            
        control_group_nopad("");
        ui_split_leftratio(1/4);
            ui_automate(slider7, labelled_dial(slider7, -6, -24, 0, 0, "update wet", slider7, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider8, labelled_dial(slider8, -6, -24, 0, 0, "update dry", slider8, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider4, labelled_dial(slider4, -6, -48, 6, 0, "wet", slider4, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider5, labelled_dial(slider5, 0, -48, 6, 0, "dry", slider5, "%.1f dB", 50,50,12));
        ui_pop();
);
