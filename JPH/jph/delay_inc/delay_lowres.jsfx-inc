// This effect Copyright (C) 2004 and later Cockos Incorporated
// License: LGPL - http://www.gnu.org/licenses/lgpl.html
// desc: Delay (Lo-Fi)
//tags: delay lo-fi bitreduce
//author: Cockos

@init

function lofislider() (
resol=2^((slider9|=0)-1); 
invresl=1/resol; 

odelay=delaylen;
delaylen=slider1 * srate / 1000;
odelay!=delaylen ? (
  slider7 && odelay > 0 ? (
      // resample delay buffer, heh
      rspos=0; rspos2=0;
      drspos=odelay/delaylen;
      loop(delaylen,
         
         tpos = ((rspos)|0)*2;
         rspos2[0]=tpos[0];
         rspos2[1]=tpos[1];

         rspos2+=2;
         rspos+=drspos;
      );
      delaypos *= delaylen/odelay;
      delaypos<0 ? delaypos=0;
  );
  !slider7 && delaypos >= delaylen ? delaypos = 0;
);

wet=2^(slider7/6); 
dry=2^(slider8/6);
wet2=2^(slider4/6); 
dry2=2^(slider5/6);
);

function lofisample() (
dpint = delaypos*2;
os1=dpint[0];
os2=dpint[1];

dpint[0]=min(max((((spl0*dry + os1*wet)*resol)|0)*invresl,-4),4);
dpint[1]=min(max((((spl1*dry + os2*wet)*resol)|0)*invresl,-4),4);

spl0=spl0*dry2+os1*wet2;
spl1=spl1*dry2+os2*wet2;

(delaypos+=1) >= delaylen ? ( delaypos=0 );
);

function lofigfx() (
        ui_split_leftratio(1/7);
            ui_split_bottomratio(0.3);
                ui_automate(slider6, oneway_switch_midb(slider6, "resample", 20, 12));
            ui_pop();
                ui_automate(slider1, labelled_dial(slider1, 300, 0, 4000, 0, "ms", slider1, slider1 == 0 ? ("0 ms") : ("%.i ms"), 50,50,12));
        ui_split_next();
                ui_automate(slider64, fixed_delaydial(slider64, 8, 17, 1, -2, "sync", slider64,
                                            slider64 == 17 ? ("1/64 tr") :
                                            slider64 == 16 ? ("1/64") :
                                            slider64 == 15 ? ("1/32 tr") :
                                            slider64 == 14 ? ("1/32") :
                                            slider64 == 13 ? ("1/16 tr") :
                                            slider64 == 12 ? ("1/16") :
                                            slider64 == 11 ? ("1/8 tr") :
                                            slider64 == 10 ? ("1/8") :
                                            slider64 == 9 ? ("1/4 tr") :
                                            slider64 == 8 ? ("1/4") :
                                            slider64 == 7 ? ("1/2 tr") : 
                                            slider64 == 6 ? ("1/2") :
                                            slider64 == 5 ? ("1/1 tr") :
                                            slider64 == 4 ? ("1/1") :
                                            slider64 == 3 ? ("2/1 tr") :
                                            slider64 == 2 ? ("2/1") :
                                            slider64 == 1 ? ("4/1"), 50,50,12));
        ui_split_next();
            ui_automate(slider9, fixed_dial(slider9, 8, 1, 24, 0, "resolution", slider9, "%.i bits", 50,50,12));
        ui_pop();
        control_group_nopad("");
        ui_split_leftratio(1/4);
            ui_automate(slider7, labelled_dial(slider7, -6, -24, 0, 0, "update wet", slider7, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider8, labelled_dial(slider8, -6, -24, 0, 0, "update dry", slider8, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider4, labelled_dial(slider4, -6, -48, 6, 0, "wet", slider4, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider5, labelled_dial(slider5, 0, -48, 6, 0, "dry", slider5, "%.1f dB", 50,50,12));
        ui_pop();
);
