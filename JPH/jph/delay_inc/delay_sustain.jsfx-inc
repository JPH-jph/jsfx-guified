// This effect Copyright (C) 2004 and later Cockos Incorporated
// License: LGPL - http://www.gnu.org/licenses/lgpl.html
// desc: Delay w/Sustain
//tags: delay compressor dynamics
//author: Cockos

@init

function sustainslider() (
odelay=delaylen;
delaylen=min(slider1 * srate / 1000,500000);
odelay != delaylen ? (
  delaypos >= delaylen ? delaypos = 0;
  freembuf(delaylen*2);
);
maxmix = 10^(slider21/20);
wetmix2 = 10^(slider4/20);
drymix2 = 10^(slider5/20);

thresh = 10^(slider18/20);
tmp = slider19*0.001;
tmp==0 ? tmp=0.0001;
denv = exp(-1/(tmp*srate));
tmp = slider20*0.001;
tmp==0 ? tmp=0.0001;
denvr = exp(-1/(tmp*srate));
);

function sustainsample() (
a = max(abs(spl0),abs(spl1));

env = a > env ? env*denv + a*(1-denv) : env*denvr + a*(1-denvr);

dpint = delaypos*2;
os1=dpint[0];
os2=dpint[1];

sc=0.0;
env > thresh ? (
  a = env/thresh; // ~6dB = 2, 12dB over=4
  sc=a*0.5*maxmix;
  sc>maxmix?sc=maxmix;
);

dpint[0]=min(max(spl0*sc + os1*(1-sc),-4),4);
dpint[1]=min(max(spl1*sc + os2*(1-sc),-4),4);

(delaypos+=1) >= delaylen ? delaypos=0;

spl0=spl0*drymix2 + os1*wetmix2;
spl1=spl1*drymix2 + os2*wetmix2;
);

function sustaingfx() (
        ui_split_leftratio(1/9);
            ui_automate(slider1, labelled_dial(slider1, 300, 0, 4000, 0, "ms", slider1, slider1 == 0 ? ("0 ms") : ("%.i ms"), 50,50,12));
        ui_split_next();

            ui_automate(slider64, fixed_delaydial(slider64, 8, 17, 1, -2, "sync", slider64,
                                            slider64 == 17 ? ("1/64 tr") :
                                            slider64 == 16 ? ("1/64") :
                                            slider64 == 15 ? ("1/32 tr") :
                                            slider64 == 14 ? ("1/32") :
                                            slider64 == 13 ? ("1/16 tr") :
                                            slider64 == 12 ? ("1/16") :
                                            slider64 == 11 ? ("1/8 tr") :
                                            slider64 == 10 ? ("1/8") :
                                            slider64 == 9 ? ("1/4 tr") :
                                            slider64 == 8 ? ("1/4") :
                                            slider64 == 7 ? ("1/2 tr") : 
                                            slider64 == 6 ? ("1/2") :
                                            slider64 == 5 ? ("1/1 tr") :
                                            slider64 == 4 ? ("1/1") :
                                            slider64 == 3 ? ("2/1 tr") :
                                            slider64 == 2 ? ("2/1") :
                                            slider64 == 1 ? ("4/1"), 50,50,12));
        ui_pop();
        ui_split_leftratio(1/2);
        control_group_nopad("");
        ui_split_leftratio(1/3);
            ui_automate(slider18, labelled_dial(slider18, -44, -120, 6, 0, "thresh", slider18, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider19, labelled_dial(slider19, 10, 0, 1000, 0, "attack", slider19, "%.1f ms", 50,50,12));
        ui_split_next();
            ui_automate(slider20, labelled_dial(slider20, 10, 0, 1000, 0, "release", slider20, "%.1f ms", 50,50,12));
        ui_pop();
        ui_pop();
        
        control_group_nopad("");
        ui_split_leftratio(1/3);
            ui_automate(slider4, labelled_dial(slider4, -6, -48, 6, 0, "wet", slider4, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider5, labelled_dial(slider5, 0, -48, 6, 0, "dry", slider5, "%.1f dB", 50,50,12));
        ui_split_next();
            ui_automate(slider21, labelled_dial(slider21, 0, -48, 0, 0, "max mix", slider21, "%.1f dB", 50,50,12));
        ui_pop();
);
