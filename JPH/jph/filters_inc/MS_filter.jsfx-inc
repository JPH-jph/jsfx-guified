@init

function msfilterinit() (
itm1=itm2=otm1=otm2=0;

z = 0;
z0 = 0;
z1 = 0;

src_a = tgt_a = slider18*0.01;
src_b = tgt_b = 1 - slider18*0.01;

src_out = tgt_out = 10^(slider32/20);
);

function msfilterslider() (
tgt_a = slider18*0.01;
tgt_b = 1 - slider18*0.01;

mode = slider19;

tgt_out = 10^(0/20);
);

function msfilterblock() (
d_a = (tgt_a-src_a)/samplesblock;
ta = src_a;
src_a = tgt_a;

d_b = (tgt_b-src_b)/samplesblock;
tb = src_b;
src_b = tgt_b;

d_out = (tgt_out-src_out)/samplesblock;
tout = src_out;
src_out = tgt_out;
);

function msfiltersample() (

ta += d_a;
tb += d_b;
tout += d_out;

a = ta;
b = tb;
out = tout;

mode==0 ?( 
//lowpass
in0 = spl0;
in1 = spl1;
z0 = (in0 * b) + (z0 * a);
z1 = (in1 * b) + (z1 * a);
spl0 = z0;
spl1 = z1;
);

mode==1 ?( 
//lowpass mono
in = (spl0+spl1)*0.5;
z = (in * b) + (z * a);
spl0 = z;
spl1 = z;
);

mode==2 ?( 
//lowpass mid-signal
in0 = (spl0-spl1)*0.5;
in1 = (spl0+spl1)*0.5;
z = (in1 * b) + (z * a);
spl0 = in0 + z;
spl1 = in0*-1 + z;
);

mode==3 ?( 
//lowpass side-signal
in0 = (spl0-spl1)*0.5;
in1 = (spl0+spl1)*0.5;
z = (in0 * b) + (z * a);
spl0 = in1 + z;
spl1 = in1 + z*-1;
);

mode==4 ?( 
//highpass
in0 = spl0;
in1 = spl1;
z0 = (in0 * b) + (z0 * a);
z1 = (in1 * b) + (z1 * a);
spl0 = in0 - z0;
spl1 = in1 - z1;
);

mode==5 ?( 
//highpass mono
in = (spl0+spl1)*0.5;
z = (in * b) + (z * a);
spl0 = in - z;
spl1 = in - z;
);

mode==6 ?( 
//highpass mid-signal
in = (spl0+spl1)*0.5;
z = (in * b) + (z * a);
spl0 -= z;
spl1 -= z;
);

mode==7 ?( 
//highpass side-signal
in = (spl0-spl1)*0.5;
z = (in * b) + (z * a);
spl0 -= z;
spl1 -= z*-1;
);

otm1=0.999*otm1+spl0-itm1; itm1=spl0; spl0=otm1;
otm2=0.999*otm2+spl1-itm2; itm2=spl1; spl1=otm2;

spl0*=outgain;
spl1*=outgain;
);

function msfiltergfx() (
        ui_split_topratio(1/10);
        ui_automate(slider19, multipleway_switch(slider19, "lp", 0, 20, 12));
        ui_split_next();
            ui_automate(slider19, multipleway_switch(slider19, "lp mono", 1, 20, 12));
        ui_split_next();
            ui_automate(slider19, multipleway_switch(slider19, "lp mid", 2, 20, 12));
        ui_split_next();
            ui_automate(slider19, multipleway_switch(slider19, "lp side", 3, 20, 12));
        ui_split_next();
            ui_automate(slider19, multipleway_switch(slider19, "hp", 4, 20, 12));
        ui_split_next();
            ui_automate(slider19, multipleway_switch(slider19, "hp mono", 5, 20, 12));
        ui_split_next();
            ui_automate(slider19, multipleway_switch(slider19, "hp mid", 6, 20, 12));
        ui_split_next();
            ui_automate(slider19, multipleway_switch(slider19, "hp side", 7, 20, 12));
        ui_split_next();
        
        
        slider19 < 4 ? ( //lp
            ui_pop();
    ui_pop();
            
            //WINDOW
    ui_split_leftratio(0.6);
        ui_split_topratio(1/2);
            draw_lp(slider18, 24, 0, 100, 0, 0, 0.85);
            
        ui_split_next();
            ui_split_leftratio(1/3);
                ui_automate(slider18, labelled_dial(slider18, 100, 0, 100, 0, "cutoff", slider18, "%i", 60,60,12)); 
            ui_pop();
        
        
        ) : slider19 > 3 ? (//lp
        ui_pop();
    ui_pop();
            
            //WINDOW
    ui_split_leftratio(0.6);
        ui_split_topratio(1/2);
            draw_hp(slider18, 24, 0, 100, 0, 0, 0.85);
        
        ui_split_next();
            ui_split_leftratio(1/3);
                ui_automate(slider18, labelled_dial(slider18, 100, 0, 100, 0, "cutoff", slider18, "%i", 60,60,12)); 
            ui_pop();
    );
);
