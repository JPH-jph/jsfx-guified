desc: Filters - GUI
//see plugin description

//////////////////////////////////////////
import ../ui-lib/ui-lib.jsfx-inc
import ../ui-lib/ui-lib-compat.jsfx-inc
filename:0,../ui-lib/bitmap/theme-dark-orange.png
filename:1,../ui-lib/bitmap/theme-light-orange.png
filename:2,../ui-lib/bitmap/theme-sunny.png
filename:3,../ui-lib/bitmap/theme-retro.png
filename:4,../ui-lib/bitmap/theme-blue.png
filename:5,../ui-lib/bitmap/theme-pattern.png
//////////////////////////////////////////
import /filters_inc/apple12pole.jsfx-inc
import /filters_inc/cheby24db.jsfx-inc
import /filters_inc/moog24db.jsfx-inc
import /filters_inc/MS_filter.jsfx-inc
import /filters_inc/rbj_filters.jsfx-inc
import /filters_inc/MS-20.jsfx-inc
import /filters_inc/rc_filter.jsfx-inc
import /filters_inc/zdf_filter.jsfx-inc
import /filters_inc/zoelzer_filters.jsfx-inc

//liteon applefilter72db
slider1:0<0,1,1{Stereo,Mono}>-Processing         ----apple----
slider2:0<0,6,1{Off,12 dB/oct (2-pole),24 dB/oct (4-pole),36 dB/oct (6-pole),48 dB/oct (8-pole),60 dB/oct (10-pole),72 dB/oct (12-pole)}>-HP Slope
slider3:0<0,100,0.01>-HP Cutoff (Scale)
slider4:0<-16,16,0.01>-HP Resonance (dB)
slider5:0<0,6,1{Off,12 dB/oct (2-pole),24 dB/oct (4-pole),36 dB/oct (6-pole),48 dB/oct (8-pole),60 dB/oct (10-pole),72 dB/oct (12-pole)}>-LP Slope
slider6:100<0,100,0.01>-LP Cutoff (Scale)
slider7:0<-16,16,0.01>-LP Resonance (dB)

//liteon cheby24db
slider8:0<0,1,1{Stereo,Mono}>-Processing         ----cheby----
slider9:0<0,2,1{LP,HP,BP}>-Filter Type
slider10:100<0,100,0.05>-Cutoff (Scale)
slider11:0.3<0,0.9,0.0005>-Passband Ripple (Less/More)

//liteon moog24db
slider12:0<0,1,1{Stereo,Mono}>-Processing         ----moog----
slider13:0<0,2,1{LP,HP,BP}>-Filter Type
slider14:100<0,100,0.05>-Cutoff (Scale)
slider15:0<0,0.85,0.001>-Resonance
slider16:0<0,100,0.05>-Drive (%)
slider17:0<0,1,1{Off,On}>-Oversample (x2)

//witti msfilter
slider18:50<0,100,0.1>-Filter (%)         ----mid side----
slider19:0<0,7,1{lowpass,lowpass mono,lowpass mid,lowpass side,highpass,highpass mono,highpass mid,highpass side}>-Mode

//witti rbj_filters
slider20:50<0,100,0.01>-Frequency (Scale)         ----rbj----
slider21:0.707<0,4,0.001>-Bandwidth
slider22:0<-12,12,0.1>-Gain (dB)
slider23:0<0,8,1{lpf (bw),hpf (bw),bpf (constant skirt gain) (bw),bpf2 (constant peak gain) (bw),notch (bw),all pass (bw),peak (bw;dB),lsf (bw;dB),hsf (bw;dB)}>-Filter type

//saike ms-20
slider24:4<-6,24,1>-Drive (dB)         ----ms-20----
slider25:0<-6,24,1>-Post Boost (dB)
slider26:1<0,1,.0001>-Cutoff
slider27:0<0,1,.0001>-Resonance
slider28:0<0,2,{LP,BP,HP}>-Type
slider29:1<0,1,1<{Off,On}>-Inertia
slider30:0<0,1,1<{tanh,atan}>-Non-linearity integrator saturation (OTA)
slider31:0<0,1,1<{clip,soft}>-Non-linearity diode clipper
slider32:2<1,8,1>-Oversampling

//rc tale
slider33:0<0,4,1{Low-Pass,High-Pass,All-Pass,Notch,Band-Pass}>-Mode         ----rc----
//slider34:1000<20,24000,1>-Freq (Hz)
slider35:100<0,100,1>-Scale (%)
slider36:2.0<0.0,6.0,0.01>-Bandwidth (oct)
slider37:0<0,1,1{6 dB,12 dB}>-Slope (dB/oct)

//zdf tale
slider38:0<0,7,1{Low-Pass,High-Pass,Band-Pass,Notch,All-Pass,Low-Shelf,Band,High-Shelf}>-Mode         ----zdf----
//slider39:1000<1,24000,1>-Freq (Hz)
slider40:100<0,100,1>-Scale (%)
slider41:0.0<-72.0,36.0,0.1>-Gain (dB)
slider42:1.0<0.1,10.0,0.01>-Q

//zoelzer
slider43:50<0,100,0.01>-Frequency (Scale)         ----zoelzer----
slider44:0.707<0.2,4,0.001>-Bandwidth
slider45:0<-12,12,0.1>-Gain (dB)
slider46:0<0,8,1{lpf (bw),hpf (bw),bpf (constant skirt gain) (bw),bpf2 (constant peak gain) (bw),notch (bw),all pass (bw),peak (bw;dB),lsf (bw;dB),hsf (bw;dB)}>-Filter type

//switchers
slider60:0<0,6,1>-Theme         ----gui----
slider61:0<-24,24,0.01>-Output (dB)
slider62:0<0,1,1{On,Off}>-Limiter
slider63:1<1,2,1>-Apple HP LP
slider64:0<0,9,1>-Switch

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
///////////////////////
bufferlength = ceil(srate*1);
buffer0 = 0;
buffer1 = buffer0 + bufferlength;
bufferpeak = buffer1 + bufferlength;
freemem = bufferpeak + bufferlength;
freemem = ui_setup(freemem); // returns the first index it's not using
///////////////////////

//cheby
cheby_cDenorm = 0;
cheby_mv=2^(-0.2/6);
cheby_e = 2.718281828459045;
pi = 3.141592653589793;
cheby_cutoff = 20000;

//moog
moog_cDenorm = 10^-30;
moog_mv=2^(-0.2/6);
moog_fs = srate;

moog_c1 = 1;
moog_c2 = -0.75;
moog_c3 = 0.17;
moog_fgain = 5;

moog_bl_c1 = 0.52;
moog_bl_c2 = 0.54;
moog_bl_c3 = -0.02;

//ms
ms_itm1=ms_itm2=ms_otm1=ms_otm2=0;
ms_z = 0;
ms_z0 = 0;
ms_z1 = 0;
ms_src_a = ms_tgt_a = slider18*0.01;
ms_src_b = ms_tgt_b = 1 - slider18*0.01;
ms_src_out = ms_tgt_out = 10^(slider32/20);

//ms20
bpos=0;

cutoff_mem  = 0;
reso_mem    = 10000;
sinc_hist1  = 20000;
sinc_hist2  = 30000;
sinc_flt    = 40000;
sinc_flt2   = 50000;
sinc_flt3   = 60000;
sinc_flt4   = 70000;
sinc_tmp    = 80000;

//rc
dry.smooth = 0;
wet.smooth = 1;
min_fc = 1/60;

//zdf
r2.smooth = cl.smooth = 1;
cb.smooth = ch.smooth = 0;

dry.smooth = 0;
wet.smooth = 1;

min_fc = 1/60;

function slider_update()
(
needs_slider_update=0;

outgain = 10^(slider61/20);

slider64 == 1 ? ( 
apple12slider();
) : slider64 == 2 ? (
cheby24slider();
) : slider64 == 3 ? (
moog24slider();
) : slider64 == 4 ? (
msfilterslider();
) : slider64 == 5 ? (
rbjslider();
) : slider64 == 6 ? (
ms20slider();
) : slider64 == 7 ? (
rcslider();
) : slider64 == 8 ? (
zdfslider();
) : slider64 == 9 ? (
zoelzslider();
);

slider60 < 1 ? (
    file=0;
) : slider60 < 2 ? (
    file=1;
) : slider60 < 3 ? (
    file=2;
) : slider60 < 5 ? (
    file=3;
) : slider60 < 6 ? (
    file=4;
) : slider60 < 7 ? (
    file=5;
);

);

@slider
needs_slider_update=1;
// ui:gfx function=custom_gfx_func, height=300

@block

needs_slider_update ? slider_update();
slider64 == 2 ? (
cheby24block();
) : slider64 == 3 ? (
moog24block();
) : slider64 == 4 ? (
msfilterblock();
) : slider64 == 6 ? (
ms20block();
);

@sample
slider64 == 0 ? (
spl0 = spl0*outgain;
spl1 = spl1*outgain;

) : slider64 == 1 ? (
apple12sample();
) : slider64 == 2 ? (
cheby24sample();
) : slider64 == 3 ? (
moog24sample();
) : slider64 == 4 ? (
msfiltersample();
) : slider64 == 5 ? (
rbjsample();
) : slider64 == 6 ? (
ms20sample();
) : slider64 == 7 ? (
rcsample();
) : slider64 == 8 ? (
zdfsample();
) : slider64 == 9 ? (
zoelzsample();
);

slider62 == 1 ? (
    spl0 = min(max(spl0,-0.98),0.98);
    spl1 = min(max(spl1,-0.98),0.98);
);


@gfx 800 300

control_start("main", "bitmap-simple", file);

ui_screen() == "main" ? (
title_desc("Filters", "processing | filter");

        ui_split_leftratio(.2);
            control_group("");
            ui_split_topratio(1/10);
                ui_automate(slider64, multipleway_switch(slider64, "off", 0, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "apple", 1, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "cheby", 2, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "moog", 3, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "m/s", 4, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "rbj", 5, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "ms-20", 6, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "rc", 7, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "zdf", 8, 20, 12));
            ui_split_next();
                ui_automate(slider64, multipleway_switch(slider64, "zoelzer", 9, 20, 12));
            ui_pop();
            
        ui_pop();
        
        control_group("");
        ui_split_leftratio(0.2);
        control_group("");
                
        slider64 == 1 ? (//apple
            apple12gfx();
        ) : slider64 == 2 ? (
            cheby24gfx();
        ) : slider64 == 3 ? (
            moog24gfx();
        ) : slider64 == 4 ? (
            msfiltergfx();
        ) : slider64 == 5 ? (
            rbjgfx();
        ) : slider64 == 6 ? (
            ms20gfx();
        ) : slider64 == 7 ? (
            rcgfx();
        ) : slider64 == 8 ? (
            zdfgfx();
        ) : slider64 == 9 ? (
            zoelzgfx();
        );
        
        ui_pop();ui_pop();
        

                //out
                control_group("");
                ui_split_topratio(0.7);
                    ui_automate(slider61, labelled_dial(slider61, 0, -24, 24, 0, "out", slider61, "%i dB", 50,50,14));
                ui_pop();
                ui_split_topratio(1/2);
                    ui_automate(slider62, labelled_switch_mid(slider62, "limit off", "limit on"));
                ui_split_next();
                    slider64 == 1 ? (
                    ui_automate(slider1, labelled_switch_mid(slider1, "stereo", "mono"));
                    ) : slider64 == 2 ? (
                    ui_automate(slider8, labelled_switch_mid(slider8, "stereo", "mono"));
                    ) : slider64 == 3 ? (
                    ui_automate(slider12, labelled_switch_mid(slider12, "stereo", "mono"));
                    );
                ui_pop();
                ui_pop();
            
) : ui_screen() == "opts" ? (
  control_navbar("about", -1, -1);

  ui_pad();

  ui_font(#face, 12, 0, 0);
  ui_align(0, -1);
  
  text_height = ui_wraptext("This is a collection of different JSFX filters:
    -apple = applefilter72db by Liteon
    -cheby = cheby24db by Liteon
    -moog = moog24db by Liteon
    -ms = MS_filter by witti
    -rbj = rbj_filters by witti
    -ms-20 = ms-20 by saike
    -rc = rc_filter by tale
    -zdf = zdf_filter by tale
    -zoelzer = zoelzer_filters by witti

editor: JPH
-GUI (using Geraint Luff's API)
note: the filter representation is not the real filter shape. Just the first thing I came up with.
Use your ears :)");
ui_align(.5, -1);
ui_split_rightratio(0.2);
    control_group("");
    slider60 = labelled_dial(slider60, 0, 0, 6, 0, "theme", slider60, "%i", 50,50,14);
ui_pop();

) : ui_system();

ui_interacted() ? needs_slider_update = 1;

